<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>UnCoverIt</title>
 <link href="http://zhoujj2013.github.io/UnCoverIt/" rel="self"/>
 <link href="http://zhoujj2013.github.io/UnCoverIt"/>
 <updated>2014-07-16T16:26:41+08:00</updated>
 <id>http://zhoujj2013.github.io/UnCoverIt</id>
 <author>
   <name>Zhoujj</name>
   <email>zhoujj2013@gmail.com</email>
 </author>

 
 <entry>
   <title>JBrowser:导入vcf、wig和bam数据</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-vcf-wig-bam"/>
   <updated>2014-07-16T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-vcf-wig-bam</id>
   <content type="html">
&lt;h4 id=&quot;vcf-wigbam&quot;&gt;vcf, wig和bam文件的介绍&lt;/h4&gt;

&lt;p&gt;vcf文件主要是用来记录基因组variants位置及variants功能注释。
详细格式请查看：
http://samtools.github.io/hts-specs/&lt;/p&gt;

&lt;p&gt;wig是用来表示连续和非连续数据信号的文件格式。
详细格式请查看：
http://www.genome.ucsc.edu/goldenPath/help/wiggle.html&lt;/p&gt;

&lt;p&gt;bam是短片断序列alignment结果sam文件，通过samtools排序压缩后生成的文件，用于存储比对文件。
bam文件需要通过samtools进行查看。
详细格式请查看：
http://samtools.github.io/hts-specs/SAMv1.pdf&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;samtool view &amp;lt;bam_file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;vcf&quot;&gt;导入vcf文件&lt;/h4&gt;

&lt;p&gt;我个人觉得tracks.conf配置文件的配置内容更加易读，所以接下来的配置信息，我都写到tracks.conf文件。&lt;/p&gt;

&lt;p&gt;vcf文件有两种显示方式：CanvasVariants和HTMLVariants。我暂没有发现两者的区别。&lt;/p&gt;

&lt;p&gt;在导入vcf文件前要对vcf文件进行压缩，并建立index，这个过程要求安装samtools/tabix。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# tabix: https://github.com/samtools/tabix&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 下载并安装tabix&lt;/span&gt;
git clone https://github.com/samtools/tabix.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tabix
make

&lt;span class=&quot;c&quot;&gt;# 对vcf进行压缩,以s410.vcf为例&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$tabix&lt;/span&gt;/bgzip s410.vcf

&lt;span class=&quot;c&quot;&gt;# 建立index&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$tabix&lt;/span&gt;/tabix -p s410.vcf.gz

&lt;span class=&quot;c&quot;&gt;# 生成s410.vcf.gz.tbi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;CanvasVariants&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; tracks . s410 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;storeClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; JBrowse/Store/SeqFeature/VCFTabix
&lt;span class=&quot;nv&quot;&gt;urlTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ../../vcf/s410.vcf.gz
&lt;span class=&quot;nv&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; VCF
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; JBrowse/View/Track/CanvasVariants
&lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; s410 VCF1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;HTMLVariants&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; tracks . s410-2 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
hooks.modify &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; track, feature, div &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; div.style.backgroundColor &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; track.config.variantIsHeterozygous&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;feature&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ? &lt;span class=&quot;s1&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt; : &lt;span class=&quot;s1&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; s410 VCF2
&lt;span class=&quot;c&quot;&gt;# 区分杂合和纯合位点&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;variantIsHeterozygous&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; feature &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; var &lt;span class=&quot;nv&quot;&gt;genotypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; feature.get&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;genotypes&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; var sampleName in genotypes &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; try &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; var &lt;span class=&quot;nv&quot;&gt;gtString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; genotypes&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sampleName&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;.GT.values&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; ! /^1&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|\/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;*&lt;span class=&quot;nv&quot;&gt;$/&lt;/span&gt;.test&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; gtString&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ! /^0&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|\/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;*&lt;span class=&quot;nv&quot;&gt;$/&lt;/span&gt;.test&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; gtString &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; catch&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;storeClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; JBrowse/Store/SeqFeature/VCFTabix
&lt;span class=&quot;nv&quot;&gt;urlTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ../../vcf/s410.vcf.gz
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; JBrowse/View/Track/HTMLVariants
metadata.category &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; VCF
metadata.Description &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Variants called from XX.bam using samtools and bcftools.  Heterozygous variants are shown in red, homozygous variants in blue.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;bam&quot;&gt;导入bam文件&lt;/h4&gt;

&lt;p&gt;bam文件导入后，有两种显示方式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;直接显示每一个reads的比对情况(type = JBrowse/View/Track/Alignments2)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;只显示比对的coverage情况(type = JBrowse/View/Track/SNPCoverage)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两种方式均要临时读进某个region的alignment数据，所显示的速度较为慢的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;alignment2方式&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . s410_bam ]                     #　以s410.bam为例，要求已经排序并建立index, **.bam.bai文件
style.height = 7
key = BAM - s410 alignment2
storeClass = JBrowse/Store/SeqFeature/BAM
urlTemplate = ../../data/s410.sorted.rmdup.bam
maxFeatureScreenDensity = 4
metadata.category = BAM
metadata.Description = small test pattern of BAM-format paired alignments of simulated resequencing reads on the s410 sample.
type = JBrowse/View/Track/Alignments2
chunkSizeLimit = 50000000                  # 这个是限制在某一个region允许读取的数据量，如果读进的数据量太大会造成浏览器“罢工”。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;coverage方式&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . volvox-sorted_bam_coverage ]
storeClass = JBrowse/Store/SeqFeature/BAM
urlTemplate = ../../data/s410.sorted.rmdup.bam
metadata.category = BAM
metadata.Description = SNP/Coverage view of s410.bam, simulated resequencing alignments.
type = JBrowse/View/Track/SNPCoverage       #注意这个设置的区别
key = BAM - s410 SNPs/Coverage
chunkSizeLimit = 50000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;wig&quot;&gt;导入wig文件&lt;/h4&gt;

&lt;p&gt;JBrowser并不直接支持wig文件，它要求wig文件压缩成bigwig格式，这个可以大大节约存储空间。&lt;/p&gt;

&lt;p&gt;目前还没有现成的程序支持bam文件转换为wig文件，wig文件主要是用来看sequencing的coverage和density分布情况，所以先解决bam和wig文件转换问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;from bam file to wig file&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 先用samtools把bam转化为sam数据流，再通过管道把数据导入到sam2wig.pl脚本，生成wig文件&lt;/span&gt;
samtools view ../data/s410.sorted.rmdup.bam | perl sam2wig.pl --bin 30 --minMQ 30 - &amp;gt; s410.wig

&lt;span class=&quot;c&quot;&gt;# 下载ucsc tools&lt;/span&gt;
wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes
wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/wigToBigWig

&lt;span class=&quot;c&quot;&gt;# 把wig转化为bigwig格式&lt;/span&gt;
./fetchChromSizes hg19 &amp;gt; hg19.chrom.sizes
./wigToBigWig ./s410.wig hg19.chrom.sizes s410.bw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;sam2wig.pl代码如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/zhoujj2013/2f44ba0c0437f0241cc4.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;配置bigwig文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;bigwig有两种显示的方式，一种是density，另外一种是XY-plot。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;density plot方式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . s410_bw_density ]
style.neg_color = function(feature) { return feature.get(&amp;#39;score&amp;#39;) &lt;span class=&quot;nt&quot;&gt;&amp;lt; 150&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;如果位点的&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sequencing&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 150X显示为红色，否则绿色
bicolor_pivot = mean
key = s410 BigWig Density
storeClass = JBrowse/Store/BigWig
urlTemplate = ../../sam2wig/s410
type = JBrowse/View/Track/Wiggle/Density
metadata.category = Quantitative / Density # 这里是表示两层的分类目录，用/分开。
metadata.Description = Wiggle/Density view of s410.bw.  Also demonstrates use of a user-configurable callback to set the value of neg_color to green when the score is below 150.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;XY-plot方式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . s410_bw_xyplot ]
style.pos_color = function(feature) { return feature.get(&amp;#39;score&amp;#39;) &amp;gt; 30 ? &amp;#39;red&amp;#39; : &amp;#39;blue&amp;#39;; }
variance_band = true
key = s410 BigWig XY
storeClass = JBrowse/Store/BigWig
urlTemplate = ../../sam2wig/s410.bw
type = JBrowse/View/Track/Wiggle/XYPlot
metadata.category = Quantitative / XY Plot
metadata.description = Wiggle/XYPlot view of volvox_microarray.bw.  Demonstrates use of a user-configured callback to set the bar color to red when the score is above 30.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;完成vcf、wig、bam文件导入后，不需要建立索引，直接就可以查看信号。&lt;/p&gt;

&lt;p&gt;参考：
http://gmod.org/wiki/JBrowse_Configuration_Guide&lt;/p&gt;

&lt;p&gt;转载请标明出处：
http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-vcf-wig-bam/&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>JBrowser:导入UCSC数据库基因信息数据</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-ucsc-tracks"/>
   <updated>2014-07-16T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-ucsc-tracks</id>
   <content type="html">
&lt;p&gt;UCSC基因组数据库中有很多有用的基因组数据，再加上这两年新加入的encode project数据，组合这些数据可以对模式物种进行深入研究。但是它不包含的刚测序的物种信息，一般来说，hg19、hg18、mouse、zera fish、fly、c.elegan和yeast的数据较为全面。&lt;/p&gt;

&lt;p&gt;JBrowser提供perl脚本可以方便地把ucsc数据导入浏览器。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;下载必要的数据库文件&lt;/h4&gt;

&lt;p&gt;ucsc是一个大型的数据库，可以先解的其ftp目录结构：&lt;/p&gt;

&lt;p&gt;hg19 ftp数据库的目录结构
http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 建立文件夹&lt;/span&gt;
mkdir ucsc &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ucsc

&lt;span class=&quot;c&quot;&gt;# 下载该物种数据库sql文件&lt;/span&gt;
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/trackDb.sql
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/trackDb.txt.gz

&lt;span class=&quot;c&quot;&gt;# 下载refgene基因集文件，这个是ucsc特有的格式&lt;/span&gt;
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/refGene.sql
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz

&lt;span class=&quot;c&quot;&gt;# 每一个数据集包含两个文件&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;refgenejbrowser&quot;&gt;把refGene导入JBrowser&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# --in 这里是指输入文件夹&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --track 这个的名字要与所下载文件的tracks一致&lt;/span&gt;
perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/ucsc-to-json.pl --in ./ucsc/ --track &lt;span class=&quot;s1&quot;&gt;&amp;#39;refGene&amp;#39;&lt;/span&gt; -out ./json/hg19/ --cssclass transcript --subfeatureClasses &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;CDS&amp;quot;:&amp;quot;transcript-CDS&amp;quot;, &amp;quot;UTR&amp;quot;: &amp;quot;transcript-UTR&amp;quot;}&amp;#39;&lt;/span&gt; --arrowheadClass transcript-arrowhead
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;建立索引（可以选择不建立索引）&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl /var/www/jbrowser/bin/generate-names.pl --dir ./json/hg19/ -tracks refGene -v --sortMem 2048000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;其它的ucsc数据库里的tracks导入方法类似。&lt;/p&gt;

&lt;p&gt;参考：
http://gmod.org/wiki/JBrowse_Configuration_Guide&lt;/p&gt;

&lt;p&gt;转载请注明出处：
http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/16/jbrowser-import-ucsc-tracks/&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>JBrowser:导入bed和gff3文件</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/15/jbrowser-import-bed-and-gff3"/>
   <updated>2014-07-15T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/15/jbrowser-import-bed-and-gff3</id>
   <content type="html">
&lt;p&gt;Bed和gff3文件是存储基因功能元件位置信息的文件。想把数据导入JBrowser，首先要理解文件格式及其存储内容。&lt;/p&gt;

&lt;p&gt;Bed的每一个位置坐标代表一个位置，详细格式见：http://genome.ucsc.edu/FAQ/FAQformat.html#format1&lt;/p&gt;

&lt;p&gt;gff3可以表现一个基因或者转录本的结构及位置信息，详细格式见：http://genome.ucsc.edu/FAQ/FAQformat.html#format3&lt;/p&gt;

&lt;p&gt;想了解更多与gff3格式相关的信息，请参考：&lt;/p&gt;

&lt;p&gt;http://www.sequenceontology.org/gff3.shtml&lt;/p&gt;

&lt;p&gt;http://gmod.org/wiki/GFF3#GFF3_Annotation_Section&lt;/p&gt;

&lt;p&gt;在线的gff3格式认证识别：&lt;/p&gt;

&lt;p&gt;http://modencode.oicr.on.ca/cgi-bin/validate_gff3_online&lt;/p&gt;

&lt;p&gt;gff3格式当时发布的时候是想用这种格式表示基因组的所有信息，也就是说，bed文件也可以转化为gff3格式导入。&lt;/p&gt;

&lt;h4 id=&quot;jbrowserbed&quot;&gt;直接向JBrowser中导入bed文件&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;利用$JB/bin/flatfile-to-json.pl导入bed文件；&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# --className 是把基因组元件显示的css样品，详细请查看：$JB/docs/featureglyphs.html&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --arrowheadClass 表示是否在元件两边加上方向，此处不需要加箭头方向&lt;/span&gt;
perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/flatfile-to-json.pl --bed TargetGeneRegionExtend2bp.bed --key &lt;span class=&quot;s1&quot;&gt;&amp;#39;XXTargetReg&amp;#39;&lt;/span&gt; --className feature2 --trackLabel RandomTarget --arrowheadClass none --metadata &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;category&amp;quot; : &amp;quot;TargetReSequencing&amp;quot;}&amp;#39;&lt;/span&gt; --out ./json/hg19/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;利用$JB/bin/flatfile-to-json.pl对bed文件的gene元件建立名字索引；&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# --sortMem 是指定建立名字索引时所用的内存，单位是b&lt;/span&gt;
perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/generate-names.pl --dir ./json/hg19/ -tracks RandomTarget -v --sortMem 2048000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;可以从tracksselector里面选择我们刚才建立的track。&lt;/p&gt;

&lt;p&gt;完成名字索引建立后，我们可以在查询框查询相应名字，ajax是会有自动提示的。&lt;/p&gt;

&lt;h4 id=&quot;jbrowergff3gtfgff2&quot;&gt;向JBrower导入gff3/gtf/gff2文件&lt;/h4&gt;

&lt;p&gt;JBrowser的html feature暂时只支持gff3格式文件，gtf和gff2文件都要根据http://gmod.org/wiki/GFF3#GFF3_Annotation_Section中的说明进行格式转换，由于gff3有一些field名字是可以自定义的，所以还得根据JBrowser进行调整。&lt;/p&gt;

&lt;p&gt;JBrowser还有另外一种CanvasFeatures，它是支持gtf和gff3格式的，但是它是临时读取文件的，显示速度有点过慢。&lt;/p&gt;

&lt;p&gt;关于HTMLfeatures和CanvasFeatures，我日后详细写个文章来研究。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTMLfeatures导入&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;把Ensembl gtf文件转换为gff3格式；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先准备chromosome名字的转换文件chr.lst&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;MT	chrM
X	chrX
Y	chrY
1	chr1
2	chr2
3	chr3
4	chr4
5	chr5
6	chr6
7	chr7
8	chr8
9	chr9
10	chr10
11	chr11
12	chr12
13	chr13
14	chr14
15	chr15
16	chr16
17	chr17
18	chr18
19	chr19
20	chr20
21	chr21
22	chr22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;转换gtf文件格式为gff3:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl ./gtf2gff3.pl Homo_sapiens.GRCh37.75.gtf chr.lst &amp;gt; Homo_sapiens.GRCh37.75.gff3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;gtf2gff3.pl代码如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/zhoujj2013/024ef0789c1f5538d568.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;分染色体导入gff3文件（如果单个gff3文件太大会导致程序运行的内存峰值达到5G）;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;单个文件导入：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# --trackLabel 是指文件存储时，track的id&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --className 显示的基因的样式&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --subfeatureClasses 基因结构里的元件样式，如CDS,exon,UTR等&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --key 是显示在jbrowser中的tracks名字，与trackLabel可以是相同的，但是名字的用途是有区别的&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --autocomplete 是让基因的名字可以查询&lt;/span&gt;
perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/flatfile-to-json.pl --out ./json/hg19/ --gff Homo_sapiens.GRCh37.75.gff3  --type mRNA   --autocomplete all --trackLabel EnsemblTrans --key &lt;span class=&quot;s1&quot;&gt;&amp;#39;EnsemblTrans&amp;#39;&lt;/span&gt; --getSubfeatures --className transcript  --subfeatureClasses &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;CDS&amp;quot;: &amp;quot;transcript-CDS&amp;quot;}&amp;#39;&lt;/span&gt;  --arrowheadClass arrowhead  --urltemplate &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://asia.ensembl.org/Homo_sapiens/Transcript/Summary?t={id}&amp;amp;db=core&amp;quot;&lt;/span&gt; --maxLookback 2000 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;分染色体导入：&lt;/p&gt;

&lt;p&gt;写了个perl脚本，把染色体分开导入gff3文件，代码如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/zhoujj2013/5e2c1f861fbe904e7de5.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;运行以下命令导入：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl ./import_gff3_by_chr.pl Homo_sapiens.GRCh37.75.gff3 ./json/hg19/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;为新的tracks建立索引&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl /var/www/jbrowser/bin/generate-names.pl --dir ./json/hg19/ -tracks EnsemblTrans -v --sortMem 2048000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;CanvasFeatures导入&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CanvasFeatures导入会相对容易一些，唯一要做的工作是格式转换，要把你手上的gff／gtf文件变为JBrowser所要求的。CanvasFeatures是支持gff3和gtf文件直接导入的，但是文件格式有一些要求。&lt;/p&gt;

&lt;p&gt;把你的文件转换成http://gmod.org/wiki/GFF3#GFF3_Annotation_Section所要求的格式就不会错的。在此我就不写转换脚本程序了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;导入gff3文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在./json/hg19/tracks.conf文件中加入以下配置：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . hg19EnsemblTrans ]                         # 注意这里的格式
storeClass = JBrowse/Store/SeqFeature/GFF3
urlTemplate = ../../Homo_sapiens.GRCh37.75.gff3  # 相对于./json/hg19/的文件路径，注意文件格式
type = CanvasFeatures
metadata.description = This is just all the features in the Homo_sapiens.GRCh37.75.gff3 file, displayed directly from a web-accessible GFF3 file
category = Gene                                  # 这个tracks的类别
key = GFF3 - Homo_sapiens.GRCh37.75.gff3　　　　 # jbrowser要显示的名字
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;导入gtf文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在./json/hg19/tracks.conf文件中加入以下配置：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[ tracks . hg19EnsemblTrans ]
storeClass = JBrowse/Store/SeqFeature/GTF
urlTemplate = ../../Homo_sapiens.GRCh37.75.gtf    # 注意ensembl中的chromosome id一定要与reference genome是一致的
type = CanvasFeatures
metadata.description = This is just all the features in the Homo_sapiens.GRCh37.75.gtf file, which like the Homo_sapiens.GRCh37.75.gff3 file, is displayed directly from a web-accessible GTF file
category = Gene
key = GTF - Homo_sapiens.GRCh37.75.gtf in-memory adaptor
style.label = transcript_id,gene_id  # 指定你所要显示转录本及基因类型
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你用CanvasFeatures来显示tracks的话，这些tracks的名字是无法建立索引的。&lt;/p&gt;

&lt;p&gt;此处我们可以总结出：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;生物信息分析经常要对格式进行转换，对生物信息常用数据格式一定熟悉；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;掌握一门编程语言，可以完成基本程序书写非常重要；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;要学习看生物信息软件的使用说明，并通过google查询解决方案。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考：
http://gmod.org/wiki/JBrowse_Configuration_Guide&lt;/p&gt;

&lt;p&gt;声明：&lt;/p&gt;

&lt;p&gt;转载请注明出处：http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/15/jbrowser-import-bed-and-gff3/&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>JBrowser:安装及配置</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/13/jbrowser-installation"/>
   <updated>2014-07-13T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/13/jbrowser-installation</id>
   <content type="html">
&lt;p&gt;这周有点空余时间，所以尝试着去把JBrowser配置好。从事生物信息分析已经４年了，在人们看来生物信息是个“高大上”的行当（虽然我不认为是这样），无论你的算法多么的ＮＢ，都无法离开肉眼的观察与判断。因为生物信息不是０／１的简单组合，也不是ＡＴＣＧ的简单排列，而是一首ＡＴＣＧ简单字符组成的长曲。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;希望JBrowser就像一个播放机一样，让你听到生命的赞歌，也希望您对生命的感悟超越前人。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;选择&lt;a href=&quot;http://jbrowse.org/&quot;&gt;JBrowser&lt;/a&gt;的原因：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;相对UCSC Genome Browser的配置，JBrowser配置更加简单，对硬件需求低，对数据库没有要求；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JBrowser是基于Javascript和HTML5构建的，对浏览器兼容性好；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UCSC Genome Browser只对一些重要的物种提供数据，而对新测序物种没有相应支持，JBrowser提倡自主定制数据；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JBrowser是&lt;a href=&quot;http://gmod.org/wiki/Main_Page&quot;&gt;GMOD&lt;/a&gt;的成员,其中GalaxybioMark等都是很成功的生物信息软件。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;JBrowser也有其致命的弱点：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;基于Javascript和HTML5构建，信赖于浏览器处理和存储数据，很容易引起浏览器崩溃；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;所支持数据格式和格式转换支持不如UCSC；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;下面简述配置步骤：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下载及安装JBrowser，请参考（http://jbrowse.org/code/JBrowse-1.11.4/docs/tutorial/）；&lt;/li&gt;
&lt;/ul&gt;

&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# make a directory that this user can write to	&lt;/span&gt;
sudo mkdir /var/www/jbrowse 
sudo chown &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;whoami&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; /var/www/jbrowse

&lt;span class=&quot;c&quot;&gt;# cd into it&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/www/jbrowse;

&lt;span class=&quot;c&quot;&gt;# fetch a JBrowse release zip file&lt;/span&gt;
curl -O http://jbrowse.org/releases/JBrowse-x.x.x.zip

&lt;span class=&quot;c&quot;&gt;# unzip it and cd into it&lt;/span&gt;
unzip JBrowse-x.x.x.zip
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;JBrowse-x.x.x

&lt;span class=&quot;c&quot;&gt;#一定要确保你用的是bash shell&lt;/span&gt;
./setup.sh 
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;安装成功后，你可以通过浏览器查看默认配置的基因组。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;http://your.jbrowse.root/index.html?data=sample_data/json/volvox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;JBrowser是如何工作的；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JBrowser读取json文件夹下的数据，然后根据track的信息来显示数据的。&lt;/p&gt;

&lt;p&gt;json文件夹如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;path_to_json/json
	---hg19
	------trackList.conf  # 用来配置tracks
	------tracks.conf     # 用来配置tracks
	------names # 所有的名字
	------seq  # 参考基因组存放的地方
	------tracks # 所有要格式后的tracks数据存放的地方
	---hg18
	...
	---c.elegan
	...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hg19/hg18/c.elegan分别代表三个不同的基因组。&lt;/p&gt;

&lt;p&gt;JBrowser先从主页面配置文件中读取主页的信息，再通过javascript调用，根据trackList.conf和tracks.conf中的配置信息读取tracks的数据，然后再返回到页面，这个过程没有通过数据库，所以如果读取大文件的话会花费一些时间。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JBrowser主页面配置；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面列出一些主页面的主要配置文件：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;index.html        # 这个是主页html文件，里面都是javascript的调用
*.css             # 是对genome browser元件的样式进行设置的
jbrowse.conf      # 这两个是主页设置文件，一个是txt format，另外一个文件是json format，设置效果是一样的
jbrowse_conf.json # 这两个是主页设置文件，一个是txt format，另外一个文件是json format，设置效果是一样的
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对about页面的设置：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[aboutThisBrowser]
title = &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&amp;gt;&lt;/span&gt;Oryza sativa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;        # 可以用markdown来设置
description = Browser for O. sativa transcripts and RNA-seq data, produced by the Smith laboratory at Example State University.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对于tracks面板的设置：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[trackSelector] # 用#注释，表示不设置
type = Faceted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对于数据集的设置（对hg19数据进行开放）：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;[datasets.hg19]                    # datasets.&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;数据集的id&amp;gt;
url = ?data=/zhoujj_jb/json/hg19   #?data=&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;相对于jbrowser根目录的相对路径，json目录下&amp;gt;/hg19
name = hg19                        # 数据集的id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这些是主页面的基本设置，但是更重要的是，如何把自己的数据上传到JBrowser？这一部分的内存太多了。我先列一下，日后再补充。&lt;/p&gt;

&lt;p&gt;这一部分主要包括:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;导入参考序列(reference genome)；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;导入UCSC tracks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;导入gff2/gtf/gff3&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;导入bed文件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;导入bam/bigwig文件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其它文件格式转化为jbrowser支持的格式&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>JBrowser:导入参考基因组序列</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/13/jbrowser-import-reference-genome"/>
   <updated>2014-07-13T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/bioinformatics/2014/07/13/jbrowser-import-reference-genome</id>
   <content type="html">
&lt;p&gt;向JBrowser导入数据，首先要弄清楚输入文件的格式，再根据要求导入JBrowser。&lt;/p&gt;

&lt;p&gt;从事生物信息工作，８０％的程序都是利用一些已有的生物信息分析工具完成的，所以搞清楚程序输入和输出特别重要。&lt;/p&gt;

&lt;p&gt;常用生物信息数据格式，请参考（大部分生物研究材料都是英文的，如看不懂，也要慢慢看）：&lt;/p&gt;

&lt;p&gt;http://genome.ucsc.edu/FAQ/FAQformat.html&lt;/p&gt;

&lt;p&gt;向JBrowser导入参考序列，有三种方法：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;利用./bin/prepare-refseqs.pl导入fasta文件；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用./bin/prepare-refseqs.pl导入gff3文件；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用./bin/prepare-refseqs.pl，根据biodb-to-json.pl配置文件，从CHADO数据库中导入数据；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我推荐使用方法１，因为包含参考基因组和基因位置信息的gff3文件太大，导入时需要的很大的内存；另外数据要导入CHADO数据库也是一件挺复杂的事情，熟悉CHADO数据库的朋友可以使用方法３。&lt;/p&gt;

&lt;p&gt;我详细描述一下方法１：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;利用./bin/prepare-refseqs.pl导入fasta文件；&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# $JB = path_to_jbrowser # 这里$JB=/var/www/jbrowser&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 建立文件夹存在个人的JBrowser文件&lt;/span&gt;
mkdir zhoujj_jb

&lt;span class=&quot;c&quot;&gt;# 在JBrowser安装文件夹建立软连接&lt;/span&gt;
ln -s /home/zhoujj/zhoujj_jb /var/www/jbrowser

&lt;span class=&quot;c&quot;&gt;# 建立文件夹存放以hg19为参考基因组的tracks&lt;/span&gt;
mkdir -p ./json/hg19

&lt;span class=&quot;c&quot;&gt;# --fasta 输入文件&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --out json文件输出文件夹&lt;/span&gt;
perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/prepare-refseqs.pl --fasta ./hg19.fa --out ./json/hg19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;利用./bin/add-json.pl添加dataset_id，这个id会显示在参考基因组选择菜单;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/add-json.pl &lt;span class=&quot;s1&quot;&gt;&amp;#39;{ &amp;quot;dataset_id&amp;quot;: &amp;quot;hg19&amp;quot; }&amp;#39;&lt;/span&gt; ./json/hg19/trackList.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;为基因组序列建立索引；&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;perl &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/bin/generate-names.pl --dir ./json/hg19/ -v --sortMem 2048000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;修改JBrowser配置文件；&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo vim &lt;span class=&quot;nv&quot;&gt;$JB&lt;/span&gt;/jbrowse.conf
&lt;span class=&quot;c&quot;&gt;# 添加以下命令&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;datasets.hg19&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ?data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;zhoujj_jb/json/hg19
&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; hg19
&lt;span class=&quot;c&quot;&gt;# 保存并退出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;现在可以打开浏览器测试：
http://host/jbrowser/index.html?data=zhoujj_jb/json/hg19&lt;/p&gt;

&lt;p&gt;在JBrower中，导入参考序列fasta文件、bed文件、gff3文件后，要建立基因名或者序列名字的索引，才能在浏览器中正常查看。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>vim设置python关键字自动补全</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/python/2014/05/03/python_auto_complete_vim"/>
   <updated>2014-05-03T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/python/2014/05/03/python_auto_complete_vim</id>
   <content type="html">
&lt;p&gt;因为自己比较喜欢在linux工作，但是又不想放弃eclipse中python强大的python自动补全功能，所以在百度上查了一下如何设置。但是这些专家们写得很难懂，让我这种非科班出身的分析员来说，实在无法理解。在此，我解释一下如何配置。&lt;/p&gt;

&lt;p&gt;首先，我们要实现的目标：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;简单python关键词补全；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;python 函数补全带括号；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;python 模块补全；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;python 模块内函数，变量补全；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;from module import sub-module 补全；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面简述配置步骤：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下载最新的pydiction（http://www.vim.org/scripts/script.php?script_id=850）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;mkdir ~/.vim/after/ftplugin/&lt;/p&gt;

  &lt;p&gt;cd ~/.vim/after/ftplugin/&lt;/p&gt;

  &lt;p&gt;git clone https://github.com/rkulla/pydiction.git&lt;/p&gt;

  &lt;p&gt;cp pydiction/after/ftplugin/python_pydiction.vim .&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;vim自动会从~/.vim/after/ftplugin/读取配置文件，进行自动补全配置。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置~/.vimrc文件，开启自动补全&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;vim ~/.vimrc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加如下两句：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;filetype plugin on &lt;/p&gt;

  &lt;p&gt;let g:pydiction_location = &amp;#8216;/path/to/complete-dict&amp;#8217;  #　告诉vim从这个文件查找python的关键字哈希表&lt;/p&gt;

  &lt;p&gt;let g:pydiction_menu_height = 3 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;已经成功实现功能。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;增加新模块关键字&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;某一些模块的关键字没有包含到默认的complete_dict中，当有新的模块时，要手动把新的模块关键字加到complete-dict文件。&lt;/p&gt;

&lt;p&gt;pydiction文件夹下有一个程序pydiction.py可以实现模块字添加，以添加scipy包为例：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;cd ~/.vim/after/ftplugin/pydiction/&lt;/p&gt;

  &lt;p&gt;python ./pydiction.py scipy # 会自动保存旧的complete-dict&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;PS: vim最好的编辑器了，它没有脱离根本。它能使用户自己知道自己在做什么事情，而MS office不能。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>UnCoverIt: a ghost born</title>
   <link href="http://zhoujj2013.github.io/UnCoverIt/life/2013/10/24/uncoverit-a-ghost-born"/>
   <updated>2013-10-24T00:00:00+08:00</updated>
   <id>http://zhoujj2013.github.io/UnCoverIt/life/2013/10/24/uncoverit-a-ghost-born</id>
   <content type="html">
&lt;p&gt;Hi all, I am here.&lt;/p&gt;

&lt;p&gt;In this web site, I will guide to you to understand the real idea behind the huge massive data set, such as DNA/RNA sequencing data, stock marketing data, complex social network and other kinds of data from our daily life.&lt;/p&gt;

&lt;p&gt;Hope everything is better to common people.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s go!&lt;/p&gt;

</content>
 </entry>
 
 
</feed>